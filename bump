#!/bin/sh
LANG=en_US.US-ASCII
MACOSX_DEPLOYMENT_TARGET=10.7
[ -d target ] || mkdir target

TOOLCHAIN=/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin
LD=${TOOLCHAIN}/ld
CLANG=${TOOLCHAIN}/clang
LIBTOOL=${TOOLCHAIN}/libtool

C_NO=(
	conversion
	missing-field-initializers
	missing-prototypes
	sign-conversion
	trigraphs 
  deprecated-implementations
  four-char-constants
  implicit-atomic-properties
  missing-braces
  newline-eof
  selector
  shadow
  sign-compare
  strict-selector-match
  undeclared-selector
  unknown-pragmas
  unused-function
  unused-label
  unused-parameter
)
C_W=(
	deprecated-declarations
	protocol
	return-type
  format
  parentheses
  pointer-sign
  shorten-64-to-32
  switch
  uninitialized
  unused-value
  unused-variable
)
SYSROOT=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs
MACOSXSDK="${SYSROOT}/MacOSX${MACOSX_DEPLOYMENT_TARGET}.sdk"
isysroot="-isysroot ${MACOSXSDK}"
syslibroot="-syslibroot ${MACOSXSDK}"
mmacosx_version_min="-mmacosx-version-min=${MACOSX_DEPLOYMENT_TARGET}"

TARGET=target
C_OPTS=(
	'-x objective-c'
	'-arch x86_64'
	-fmessage-length=0
	-std=gnu99
	-fobjc-arc
	-fpascal-strings
	-O0
	-DDEBUG=1
	-fasm-blocks
	${mmacosx_version_min}
	-g
	-Ftarget
	"-DIBOutlet=__attribute__((iboutlet))"
	"-DIBOutletCollection(ClassName)=__attribute__((iboutletcollection(ClassName)))"
	"-DIBAction=void)__attribute__((ibaction)"
  ${isysroot}
  '-include src/main/resources/LevenshteinDistance-Prefix.pch'
	'-Isrc/main/h'
)

build_objects() {
  local path=${1}; shift
  for m in ${*}; do
    local n=$(basename ${m} .m)
    ${CLANG} ${C_OPTS[*]} ${C_NO[*]/#/-Wno-} ${C_W[*]/#/-W} -c ${path}/${m} -o ${TARGET}/${n}.o
  done || exit $?
}

build_library() {
  local library=${1}; shift
  ${LIBTOOL} -static -arch_only x86_64 ${syslibroot} -L${TARGET} -framework Cocoa \
    -o ${TARGET}/lib${library}.a \
    ${*}
}

build_framework() {
  local framework=${1}; shift
  local kit=${framework}Kit
  [ -d ${TARGET}/${kit}.framework/Versions/A ] \
  || {
    mkdir -p ${TARGET}/${kit}.framework/Versions/A
    (
      cd target
      [ -L lib${framework}.dylib ] \
      || ln -s ${kit}.framework/${kit} lib${framework}.dylib
      cd ${kit}.framework
      [ -L ${kit} ] || ln -s Versions/Current/${kit} .
      cd Versions
      [ -L Current ] || ln -s A Current
    )
  }    
  ${CLANG} -dynamiclib -arch x86_64 ${isysroot} -L${TARGET} -F${TARGET} \
    ${mmacosx_version_min} -fobjc-arc -single_module -compatibility_version 1 -current_version 1 \
    -l${PROJECT} -framework Cocoa \
    -install_name /Library/Frameworks/${kit}.framework/Versions/A/${kit} \
    -o ${TARGET}/${kit}.framework/Versions/A/${kit} \
    ${*}
}

build_executable() {
  local executable=${1}; shift
  ${CLANG} -arch x86_64 ${isysroot} -L${TARGET} -F${TARGET} ${mmacosx_version_min} -fobjc-arc \
    -framework Foundation \
    -framework ${PROJECT}Kit \
    -o ${TARGET}/${executable} ${TARGET}/main.o  
}

PROJECT=$(cd $(dirname $0) >/dev/null 2>&1; basename ${PWD})
EXECUTABLE=distance

# Compile

build_objects src/main/m main.m LevenshteinDistance.m

build_library ${PROJECT} ${TARGET}/${PROJECT}.o

build_framework ${PROJECT} ${TARGET}/${PROJECT}.o

build_executable ${EXECUTABLE}
